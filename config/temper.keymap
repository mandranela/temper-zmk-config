/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// LAYERS

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

// MACROS

#define SUPER LC(LSHIFT)
#define SUPER2 LA(LC(LSHIFT))

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hm RGUI SEMI>, <&kp SQT>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LCTRL TAB>, <&kp ESC>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_cword {
            timeout-ms = <50>;
            key-positions = <19 16>;
            bindings = <&caps_word>;
        };

        combo_vimwq {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&vim_quit>;
        };

        hm_to_kp {
            bindings = <&tog 1>;
            key-positions = <10 13>;
            layers = <0>;
        };
    };

    macros {
        vim_quit: vim_quit {
            label = "ZM_vim_quit";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp ESC &kp COLON &kp W &kp Q>;
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&soft_off>, <&macro_press>;

            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_mh {
            bindings = <
&kp Q             &kp W       &kp E         &kp R         &kp T    &kp Y  &kp U         &kp I        &kp O          &kp P
&hm LGUI A        &hm LALT S  &hm LCTRL D   &hm LSHIFT F  &kp G    &kp H  &hm RSHIFT J  &hm RCTRL K  &hm LALT L     &td0
&kp Z             &kp X       &kp C         &kp V         &kp B    &kp N  &kp M         &kp COMMA    &kp DOT        &kp FSLH
&mt LMETA ESCAPE  &kp SPACE   &lt 2 ESCAPE                                              &lt 3 RET    &kp BACKSPACE  &mt LEFT_ALT TAB
            >;
        };

        qwerty_kp {
            bindings = <
&kp Q             &kp W      &kp E         &kp R  &kp T    &kp Y  &kp U  &kp I      &kp O          &kp P
&kp A             &kp S      &kp D         &kp F  &kp G    &kp H  &kp J  &kp K      &kp L          &kp SEMICOLON
&kp Z             &kp X      &kp C         &kp V  &kp B    &kp N  &kp M  &kp COMMA  &kp DOT        &kp FSLH
&mt LMETA ESCAPE  &kp SPACE  &lt 2 ESCAPE                                &lt 3 RET  &kp BACKSPACE  &mt LEFT_ALT TAB
            >;
        };

        num_layer {
            bindings = <
&none       &kp LA(LEFT)  &kp UP    &kp LA(RIGHT)  &kp PG_UP    &kp PLUS   &kp N7  &kp N8  &kp N9  &kp KP_MULTIPLY
&kp SUPER   &kp LEFT      &kp DOWN  &kp RIGHT      &kp PG_DN    &kp MINUS  &kp N4  &kp N5  &kp N6  &kp SLASH
&kp SUPER2  &none         &none     &kp HOME       &kp END      &kp N0     &kp N1  &kp N2  &kp N3  &kp DOT
&trans      &trans        &trans                                                   &trans  &mo 4   &trans
            >;
        };

        sym_layer {
            bindings = <
&kp EXCL   &kp AT     &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR
&kp GRAVE  &kp TILDE  &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH
&kp TILDE  &none      &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE
&trans     &mo 4      &trans                                                 &trans           &trans    &trans
            >;
        };

        func_layer {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4      &kp F5              &kp F6      &kp F7        &kp F8        &kp F9  &kp F10
&none         &none         &kp C_PREV    &kp C_NEXT  &kp C_PLAY_PAUSE    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &none   &kp F11
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_NXT  &bt BT_CLR          &none       &none         &none         &none   &kp F12
&sys_reset    &trans        &bootloader                                                             &bootloader   &trans  &sys_reset
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        func_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };
};
